- name: Ensure VirtualBox has all drivers loaded
  ansible.builtin.shell:
    cmd: |
      load=no
      which lsmod >/dev/null 2>&1 || {
        >&2 echo Skipping driver loading as this is not a Linux system.
        exit 0
      }
      lsmod | grep -q vboxdrv || load=yes
      lsmod | grep -q vboxnetadp || load=yes
      lsmod | grep -q vboxnetflt || load=yes
      if [ "$load" = "yes" ]
      then
        modprobe vboxdrv && modprobe vboxnetadp && modprobe vboxnetflt || {
          >&2 echo VirtualBox is not properly installed.
          >&2 echo Please re-run bootstrap.sh and follow instructions onscreen.
          exit 4
        }
        echo CHANGED
      fi
  register: vboxdrivers
  changed_when: >-
    "CHANGED" in vboxdrivers.stdout
- name: Bring up the machine
  ansible.builtin.shell:
    cmd: |
      if ! vagrant status observability | grep -q running
      then
        vagrant up --no-provision observability || {
          ret=$?
          >&2 echo An error occurred while bringing up the machine.
          >&@ echo Run vagrant global-status to diagnose the issue.
          exit $ret
        }
        >&2 echo Machine now up
      fi
    chdir: ../../vagrant
  register: vagrant_up
  changed_when: >-
    "Machine now up" in vagrant_up.stderr
- ansible.builtin.shell:
    cmd: rm -rf ~/.cache/ansible-vagrant-ssh
  when: vagrant_up.changed
- name: Test that the machine is responsive
  ansible.builtin.shell:
    cmd: |
      set -e
      >&2 echo Testing SSH
      vagrant ssh observability -c 'echo success'
    chdir: ../../vagrant
  check_mode: false
  changed_when: false
- name: Provision software on the machine
  ansible.builtin.shell:
    cmd: |
      vagrant provision observability
    chdir: ../../vagrant
  register: vagrant_provision
  changed_when: >-
    "changed=0" not in vagrant_provision.stdout
