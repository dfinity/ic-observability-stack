---
# Namespace for the observability stack objects.
# Replicated in grafana-crds.yml.
apiVersion: v1
kind: Namespace
metadata:
  name: observability-stack
---
# Service account (necessary).
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: observability-stack
  labels:
    app.kubernetes.io/name: prometheus
---
# Service account cluster role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: prometheus
  name: prometheus-discovery
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Service account cluster role binding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: prometheus
  name: prometheus-discovery
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-discovery
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: observability-stack
---
# From https://grafana.com/docs/grafana-cloud/monitor-infrastructure/kubernetes-monitoring/configuration/configure-infrastructure-manually/prometheus/prometheus-operator/
# API documentation at https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  namespace: observability-stack
  name: prometheus
  labels:
    app: prometheus
spec:
  image: quay.io/prometheus/prometheus:v2.22.1
  nodeSelector:
    kubernetes.io/os: linux
  replicas: 1
  resources:
    requests:
      memory: 400Mi
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus
  version: v2.22.1
  serviceMonitorSelector: {}
  storage:
    volumeClaimTemplate:
      spec:
        storageClassName: local-path
        resources:
          requests:
            storage: 20Gi
  scrapeConfigSelector:
    matchLabels:
      app: prometheus
---
# Prometheus service exposed to public.
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: observability-stack
  labels:
    app: prometheus
spec:
  type: NodePort
  ports:
    - name: web
      nodePort: 32090
      port: 9090
      protocol: TCP
      targetPort: web
  selector:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: prometheus
